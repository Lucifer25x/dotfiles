#!/usr/bin/env python
import os
import random

def get_file_path():
  file_path = input("File path: ")
  while not os.path.exists(file_path):
    print("This file doesn't exist.")
    file_path = input("File path: ")
  return file_path

def get_language():
  lang = input("Language to practice (en/az): ")
  while lang not in ['en', 'az']:
    lang = input("Language to practice (en/az): ")
  return lang

def get_question_order():
  order = input("Question order (asc, desc, rand): ")
  while order not in ['asc', 'desc', 'rand']:
    order = input("Question order (asc, desc, rand): ")
  return order

def read_dictionary(file_path, lang):
  try:
    with open(file_path, 'r') as f:
      content = f.read()
      content = [line for line in content.split('\n') if len(line)]
      questions = []
      answers = []
      for line in content:
        line = line.split('-')
        question, answer = line[0].strip().lower(), line[1].strip().lower()
        if lang == 'en':
          questions.append(question)
          answers.append(answer)
        else:
          questions.append(answer)
          answers.append(question)
      return questions, answers
  except FileNotFoundError:
    print("File not found!")
    return [], []

def ask_questions(questions, answers, order):
  total = len(questions)
  correct = 0
  mistake = 0
  answered_questions = 0
    
  if order == 'asc':
    question_range = range(total)
  elif order == 'desc':
    question_range = range(total-1, -1, -1)
  else:
    question_count = int(input("Question count: "))
    question_range = [random.randint(0,total-1) for _ in range(question_count)]
    
  for i in question_range:
    answer = input(f"{questions[i]} - ").strip().lower()
            
    if answer == "!q" or not answer:
      break
            
    if answers[i] == answer:
      correct += 1
    else:
      mistake += 1
      print("You made a mistake! Correct answer was '{}'".format(answers[i]))
    answered_questions += 1
    
  return correct, mistake, answered_questions

def main():
  file_path = get_file_path()
  lang = get_language()
  order = get_question_order()
  questions, answers = read_dictionary(file_path, lang)
  correct, mistake, answered_questions = ask_questions(questions, answers, order)

  print("\nWord count: ", len(questions))
  print("Answered questions: ", answered_questions)
  print("Correct answers: ", correct)
  print("Mistakes: ", mistake)

if __name__ == "__main__":
    main()

'''
Usage:
  1. Create text file with such a format:
    ```
    english_word = other_language_word
    new_eng_word = new_other_lang_word
    ```

  2. Run this file.
'''